2+3
x=1:8
plot(x,x^2)
1+4
[1] 5
2+pi/4-0.8
[1] 1.985398
x<-1
y<-2
z<-4
t<-2*xˆy-z
t
u=2
v=3
x=u*v
x
y=sin(x)
y
# Directly enter a sequence of daily maximum temperature data at San Diego International
Airport during 1-7 May 2017 [unit: ◦F]
tmax
tmax- < C(77,72,75,73,66,64,59)
tmax <- c(77, 72, 75, 73,66,64,59)
tmax
seq(1,8)
seq(8)
seq(1,8, by=1)
seq(1,8, length=8)
seq(1,8, length.out =8)
seq(1,15)
seq(1,1000, length=100)
sequence(4,8)
sequence(4,8 =length(4))
sequence(4,8 =length(4)
length(sequence(4,8))
sequence(20,50)
sequence(1,8)
sequence(2,8)
sequence(1951,2015)
samfctn <- function(x) x*x
samfctn(4)
fctn1 <- function(x) x*x
fctn1(4)
fctn2 <- function(fctn1(y)) y+y
fctn2 <- function(x,y,x) x+y+z
fctn2 <- function(x,y,x) x+y+z
fctn3 <- function(x,y,x) x+y+z
fctn3 <- function(x,y,z) x+y-z/2
fctn3(1,2,3)
fctn3 <- function(x,y,z) x+y-z
fctn3(1,2,3)
plot(1:7, tmax)
plot(sin, -pi, 2*pi) #plot the curve of y=sin(x) from -pi to 2 pi
square <- function(x) x*x #Define a function
plot(square, -3,2) # Plot the defined function
# Plot a 3D surface
x <- seq(-1, 1, length=100)
y <- seq(-1, 1, length=100)
z <- outer(x, y, function(x, y)(1-xˆ2-yˆ2))
#outer (x,y, function) renders z function on the x, y grid
persp(x,y,z, theta=330)
plot(sin, -pi, 2*pi) #plot the curve of y=sin(x) from -pi to 2 pi
plot(sin, -pi, 2*pi) #plot the curve of y=sin(x) from -pi to 2 pi
square <- function(x) x*x #Define a function
plot(square, -3,2) # Plot the defined function
# Plot a 3D surface
x <- seq(-1, 1, length=100)
y <- seq(-1, 1, length=100)
z <- outer(x, y, function(x, y)(1-xˆ2-yˆ2))
#outer (x,y, function) renders z function on the x, y grid
persp(x,y,z, theta=330)
square <- function(x) x*x #Define a function
plot(square, -3,2) # Plot the defined function
# Plot a 3D surface
x <- seq(-1, 1, length=100)
y <- seq(-1, 1, length=100)
z <- outer(x, y, function(x, y)(1-xˆ2-yˆ2))
#outer (x,y, function) renders z function on the x, y grid
persp(x,y,z, theta=330)
square <- function(x) x*x #Define a function
plot(square, -3,2) # Plot the defined function
# Plot a 3D surface
x <- seq(-1, 1, length=100)
y <- seq(-1, 1, length=100)
z <- outer(x, y, function(x, y)(1-xˆ2-yˆ2))
#outer (x,y, function) renders z function on the x, y grid
persp(x,y,z, theta=330)
square <- function(x) x*x #Define a function
plot(square, -3,2) # Plot the defined function
# Plot a 3D surface
x <- seq(-1, 1, length=100)
y <- seq(-1, 1, length=100)
z <- outer(x, y, function(x, y)(1-xˆ2-yˆ2))
#outer (x,y, function) renders z function on the x, y grid
persp(x,y,z, theta=330)
square <- function(x) x*x #Define a function
plot(square, -3,2) # Plot the defined function
# Plot a 3D surface
x <- seq(-1, 1, length=100)
y <- seq(-1, 1, length=100)
z <- outer(x, y, function(x, y)(1-xˆ2-yˆ2))
#outer (x,y, function) renders z function on the x, y grid
persp(x,y,z, theta=330)
square <- function(x) x*x #Define a function
plot(square, -3,2) # Plot the defined function
# Plot a 3D surface
x <- seq(-1, 1, length=100)
y <- seq(-1, 1, length=100)
z <- outer(x, y, function(x, y)(1-xˆ2-yˆ2))
#outer (x,y, function) renders z function on the x, y grid
persp(x,y,z, theta=330)
plot(sin, -pi, 2*pi) #plot the curve of y=sin(x) from -pi to 2 pi
square <- function(x) x*x #Define a function
plot(square, -3,2) # Plot the defined function
# Plot a 3D surface
x <- seq(-1, 1, length=100)
y <- seq(-1, 1, length=100)
z <- outer(x, y, function(x, y)(1-xˆ2-yˆ2))
#outer (x,y, function) renders z function on the x, y grid
persp(x,y,z, theta=330)
# yields a 3D surface with perspective angle 330 deg
#Contour plot
contour(x,y,z) #lined contours
filled.contour(x,y,z) #color map of contours
plot(sin, -pi, 2*pi) #plot the curve of y=sin(x) from -pi to 2 pi
square <- function(x) x*x #Define a function
plot(square, -3,2) # Plot the defined function
# Plot a 3D surface
x <- seq(-1, 1, length=100)
y <- seq(-1, 1, length=100)
z <- outer(x, y, function(x, y)(1-xˆ2-yˆ2))
#outer (x,y, function) renders z function on the x, y grid
persp(x,y,z, theta=330)
# yields a 3D surface with perspective angle 330 deg
#Contour plot
contour(x,y,z) #lined contours
filled.contour(x,y,z) #color map of contours
square <-function(x) x*x
plot(square,3,2)
# plot in three dimension
x <- seq(-1,1, length(100))
y <- seq(-1,1, length(100))
z <- outer (x,y function(x,y))
z <- outer (x,y function(x, y)(1-x^2-y^2))
z <- outer(x,y, function(x, y)(1-x^2-y^2))
persp(x,y,z, theta = 330)
contour(x,y,z)
filled.contour(x,y,z)
filled.contour(x,y,z)
filled.contour(x,y,z)
filled.contour(x,y,z)
persp(x,y,z, theta = 330)
contour(x,y,z)
filled.contour(x,y,z)
persp(x,y,z, theta = 220)
contour(x,y,z)
filled.contour(x,y,z)
persp(x,y,z, theta = 110)
contour(x,y,z)
persp(x,y,z, theta = 110)
contour(x,y,z)
contour(x,y,z)
x <- seq(-0.1,0.1, length(100))
x <- seq(-0.1,0.1, length(100))
y <- seq(-0.1,0.1, length(100))
z <- outer (x,y function(x,y))
z <- outer (x,y, function(x,y))
z <- outer (x,y, function(x,y)(1-x^2-y^2))
persp(x,y,z, theta = 110)
persp(x,y,z, theta = 330)
persp(x,y,z, theta = 110)
z <- outer (x,y, function(x,y)(1-x^2-y^2))
persp(x,y,z, theta = 110)
seq(1,8, by=1)
seq(1,15, by=3)
seq(1,15, length(6))
seq(1,15, by=3,length(6))
seq(1,15, by=3)
length(seq)
seq()
seq(1958-1860)
fctn1(x,y,z)
fctn1(x,y,z) x+y+z
<- fctn1(x,y,z) x+y+z
<- fctn1(x,y,z)
fctn1(x,y,z)
fctn1(x)
function(x,y,z) x+y+z
function(1,2,3)
fctn1(1,2,3)
fctn1(1,2,3)
function(x,y,z) x+y+z
function(1,2,3)
function(1,2,3)
function(x,y,z)
function(1,2,3)
function(x,y,z)
function(x,y,z) x+y+z
function(1,2,3)
fctn1(x) x^2
function(x) x^2
d(x)
D(x)
D(function(X))
fx=expression(x^2, 'x')
D(fx, 'x')
fxy=expression(x^2+y^2)
D(fxy, 'x')
D(fxy, 'y')
y=seq(1,4)
y
x=c(1,2,3,4)
x+y
x%*%y
t(x)%*%y
x%*%t()
x%*%t(x)
my matrix(y, ncol = 2)
my=matrix(y, ncol= 2)
dim(my)
as.vector(my)
mx<- matrix(c(1,1,-1.-1), byrow=true, nrow=2)
mx <- matrix(c(1,1,-1.-1), byrow=True, nrow=2)
mx <- matrix(c(1,1,-1,-1), byrow=True, nrow=2)
mx <- matrix (c(1,1,-1,-1), byrow=True, nrow=2)
mx <- matrix (c(1,1,-1,-1), byrow=TRUE, nrow=2)
mydata <- read.csv("mydata.csv")
mydata
## ---- include = FALSE---------------------------------------------------------
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", fig.show = "hide")
library(ggplot2)
## -----------------------------------------------------------------------------
mpg_drv_summary <- function() {
ggplot2::ggplot(ggplot2::mpg) +
ggplot2::geom_bar(ggplot2::aes(x = .data$drv)) +
ggplot2::coord_flip()
}
## ---- include=FALSE-----------------------------------------------------------
# make sure this function runs!
mpg_drv_summary()
## -----------------------------------------------------------------------------
#' @importFrom ggplot2 ggplot aes geom_bar coord_flip
mpg_drv_summary <- function() {
ggplot(ggplot2::mpg) +
geom_bar(aes(x = drv)) +
coord_flip()
}
## ---- include=FALSE-----------------------------------------------------------
# make sure this function runs!
mpg_drv_summary()
## -----------------------------------------------------------------------------
mpg_drv_summary <- function() {
ggplot(ggplot2::mpg) +
geom_bar(aes(x = drv)) +
coord_flip()
}
## -----------------------------------------------------------------------------
mpg_drv_summary <- function() {
ggplot(ggplot2::mpg) +
geom_bar(aes(x = .data$drv)) +
coord_flip()
}
## -----------------------------------------------------------------------------
col_summary <- function(df, col) {
ggplot(df) +
geom_bar(aes(x = .data[[col]])) +
coord_flip()
}
col_summary(mpg, "drv")
## ---- eval = (packageVersion("rlang") >= "0.3.4.9003")------------------------
col_summary <- function(df, col) {
ggplot(df) +
geom_bar(aes(x = {{ col }})) +
coord_flip()
}
col_summary(mpg, drv)
## -----------------------------------------------------------------------------
mpg_drv_dist <- structure(
c(
"4" = 103 / 234,
"f" = 106 / 234,
"r" = 25 / 234
),
class = "discrete_distr"
)
## -----------------------------------------------------------------------------
discrete_distr_data <- function(x) {
tibble::tibble(
value = names(x),
probability = as.numeric(x)
)
}
discrete_distr_data(mpg_drv_dist)
## -----------------------------------------------------------------------------
#' @importFrom ggplot2 autoplot
autoplot.discrete_distr <- function(object, ...) {
plot_data <- discrete_distr_data(object)
ggplot(plot_data, aes(.data$value, .data$probability)) +
geom_col() +
coord_flip() +
labs(x = "Value", y = "Probability")
}
library(dplyr)
library(rio)
library(ggplot2)
setwd("C:/Users/HP/Desktop/Training")
library(rio)
library(dplyr)
library(ggplot2)
setwd("C:/Users/HP/Desktop/Training")
#importation of the Data Set
#importation of the Data Set
Niamey<-rio::import("Data/NIAMEY-AERO.csv")
View(Niamey)
Niamey$Date<-as.Date(Niamey$Date)
Niamey$Year<-as.numeric(format(Niamey$Date,"%Y"))
View(Niamey)
Niamey$Month<-as.numeric(format(Niamey$Date,"%b"))
View(Niamey)
Niamey$Month<-(format(Niamey$Date,"%b"))
View(Niamey)
Niamey$Day_In_Month<-as.numeric(format(Niamey$Date,"%d"))
View(my)
View(Niamey)
View(Niamey)
Niamey_By_Year<-Niamey%>%
group_by(Station,Year)%>%
summarise(Annual_Total=sum(Precipitation,na.rm = T))
View(Niamey_By_Year)
#Export Data Set
rio::export(Niamey_By_Year,"Products/Annual_Total.xlsx")
View(Niamey_By_Year)
Niamey_Mean<-filter(Niamey_By_Year,Year<2022)%>%
group_by(Station)%>%
summarise(Mean=mean(Annual_Total))
View(Niamey_Mean)
Niamey_By_Year<-merge(Niamey_By_Year,Niamey_Mean,by=c("Station"))
View(Niamey_By_Year)
Niamey_By_Year$Anomaly<-Niamey_By_Year$Annual_Total- Niamey_By_Year$Mean
View(Niamey_By_Year)
Niamey_By_Year$AnoPosit<-ifelse(Niamey_By_Year$Anomaly<0,0,Niamey_By_Year$Anomaly)
View(Niamey_By_Year)
Niamey_By_Year$AnoNeg<-ifelse(Niamey_By_Year$Anomaly>0,0,Niamey_By_Year$Anomaly)
View(Niamey_By_Year)
Niamey_By_Year<-filter(Niamey_By_Year,Year<2022)
last_graph <- ggplot2::ggplot(data=Niamey_By_Year, mapping=ggplot2::aes(x=Year, y=Anomaly)) + ggplot2::geom_bar(position="dodge", stat="identity", fill="red") + ggplot2::geom_bar(mapping=ggplot2::aes(y=AnoPosit), fill="blue", stat="identity", position="dodge") + ggplot2::geom_smooth(mapping=ggplot2::aes(y=Anomaly), method="loess", formula="y ~ x", colour="black", se=FALSE) + theme_grey() + ggplot2::theme(axis.text.x=ggplot2::element_text(angle=90, size=20, colour="black"), axis.title=ggplot2::element_text(face="bold"), axis.text=ggplot2::element_text(face="bold"), axis.title.x=ggplot2::element_text(size=15.0, face="bold"), axis.title.y=ggplot2::element_text(size=15.0), plot.title=ggplot2::element_text(size=20.0, face="bold"), axis.text.y=ggplot2::element_text(size=20, face="bold", colour="black")) + ggplot2::labs(title=paste("Anomaly of Annual Total Rainfall for Niamey"), subtitle="", caption="") + ggplot2::xlab(label="Years") + ggplot2::scale_x_continuous(breaks=seq(by=1, to=2021, from=1980)) + ggplot2::ylab(label="Rainfall Anomaly (mm)") + ggplot2::scale_y_continuous(breaks=seq(by=3, to=800, from=-800))
last_graph
ggplot2::ggsave(filename=paste("Products/Anomaly_Niamey.jpeg",sep=""), width=14,height=8,limitsize = FALSE ,plot=last_graph)
last_graph <- ggplot2::ggplot(data=Niamey_By_Year, mapping=ggplot2::aes(x=Year, y=Anomaly)) + ggplot2::geom_bar(position="dodge", stat="identity", fill="red") + ggplot2::geom_bar(mapping=ggplot2::aes(y=AnoPosit), fill="blue", stat="identity", position="dodge") + ggplot2::geom_smooth(mapping=ggplot2::aes(y=Anomaly), method="loess", formula="y ~ x", colour="black", se=FALSE) + theme_grey() + ggplot2::theme(axis.text.x=ggplot2::element_text(angle=90, size=20, colour="black"), axis.title=ggplot2::element_text(face="bold"), axis.text=ggplot2::element_text(face="bold"), axis.title.x=ggplot2::element_text(size=15.0, face="bold"), axis.title.y=ggplot2::element_text(size=15.0), plot.title=ggplot2::element_text(size=20.0, face="bold"), axis.text.y=ggplot2::element_text(size=20, face="bold", colour="black")) + ggplot2::labs(title=paste("Anomaly of Annual Total Rainfall for Niamey"), subtitle="", caption="") + ggplot2::xlab(label="Years") + ggplot2::scale_x_continuous(breaks=seq(by=1, to=2021, from=1980)) + ggplot2::ylab(label="Rainfall Anomaly (mm)") + ggplot2::scale_y_continuous(breaks=seq(by=15, to=800, from=-800))
ggplot2::ggsave(filename=paste("Products/Anomaly_Niamey.jpeg",sep=""), width=14,height=8,limitsize = FALSE ,plot=last_graph)
last_graph <- ggplot2::ggplot(data=Niamey_By_Year, mapping=ggplot2::aes(x=Year, y=Anomaly)) + ggplot2::geom_bar(position="dodge", stat="identity", fill="red") + ggplot2::geom_bar(mapping=ggplot2::aes(y=AnoPosit), fill="blue", stat="identity", position="dodge") + ggplot2::geom_smooth(mapping=ggplot2::aes(y=Anomaly), method="loess", formula="y ~ x", colour="black", se=FALSE) + theme_grey() + ggplot2::theme(axis.text.x=ggplot2::element_text(angle=90, size=20, colour="black"), axis.title=ggplot2::element_text(face="bold"), axis.text=ggplot2::element_text(face="bold"), axis.title.x=ggplot2::element_text(size=15.0, face="bold"), axis.title.y=ggplot2::element_text(size=15.0), plot.title=ggplot2::element_text(size=20.0, face="bold"), axis.text.y=ggplot2::element_text(size=20, face="bold", colour="black")) + ggplot2::labs(title=paste("Anomaly of Annual Total Rainfall for Niamey"), subtitle="", caption="") + ggplot2::xlab(label="Years") + ggplot2::scale_x_continuous(breaks=seq(by=1, to=2021, from=1980)) + ggplot2::ylab(label="Rainfall Anomaly (mm)") + ggplot2::scale_y_continuous(breaks=seq(by=40, to=800, from=-800))
ggplot2::ggsave(filename=paste("Products/Anomaly_Niamey.jpeg",sep=""), width=14,height=8,limitsize = FALSE ,plot=last_graph)
last_graph <- ggplot2::ggplot(data=Niamey_By_Year, mapping=ggplot2::aes(x=Year, y=Anomaly)) + ggplot2::geom_bar(position="dodge", stat="identity", fill="red") + ggplot2::geom_bar(mapping=ggplot2::aes(y=AnoPosit), fill="blue", stat="identity", position="dodge") + ggplot2::geom_smooth(mapping=ggplot2::aes(y=Anomaly), method="lm", formula="y ~ x", colour="black", se=FALSE) + theme_grey() + ggplot2::theme(axis.text.x=ggplot2::element_text(angle=90, size=20, colour="black"), axis.title=ggplot2::element_text(face="bold"), axis.text=ggplot2::element_text(face="bold"), axis.title.x=ggplot2::element_text(size=15.0, face="bold"), axis.title.y=ggplot2::element_text(size=15.0), plot.title=ggplot2::element_text(size=20.0, face="bold"), axis.text.y=ggplot2::element_text(size=20, face="bold", colour="black")) + ggplot2::labs(title=paste("Anomaly of Annual Total Rainfall for Niamey"), subtitle="", caption="") + ggplot2::xlab(label="Years") + ggplot2::scale_x_continuous(breaks=seq(by=1, to=2021, from=1980)) + ggplot2::ylab(label="Rainfall Anomaly (mm)") + ggplot2::scale_y_continuous(breaks=seq(by=40, to=800, from=-800))
ggplot2::ggsave(filename=paste("Products/Anomaly_Niamey.jpeg",sep=""), width=14,height=8,limitsize = FALSE ,plot=last_graph)
?lm()
summary(lm(Niamey_By_Year$Year~Niamey_By_Year$Anomaly))
